// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id                 String   @id @default(uuid())
  username           String   @unique
  name               String?
  sign_up_ip         String
  sign_up_user_agent String
  last_ip            String
  last_user_agent    String
  login_count        Int      @default(0)
  last_login_at      DateTime?
  created_at         DateTime @default(now())
  updated_at         DateTime @updatedAt
  lists              lists[]
}

model lists {
  id         String    @id @default(uuid())
  name       String
  user       users     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id     String
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  signs      signs[]   @relation("ListSign")  // Many-to-many relationship
}

model signs {
  id                 String   @id @default(uuid())
  slug               String   @unique
  name               String
  url                String
  thumbnail_file_id  String   // Foreign key for thumbnail file
  thumbnailFile      files    @relation("ThumbnailFile", fields: [thumbnail_file_id], references: [id])
  image_file_id      String?  // Foreign key for image file
  imageFile          files?   @relation("ImageFile", fields: [image_file_id], references: [id])
  youtube_url        String?
  gif_file_id        String?
  description        String?
  created_at         DateTime @default(now())
  updated_at         DateTime @updatedAt
  lists              lists[]  @relation("ListSign") // Many-to-many relationship
}

model files {
  id                 String   @id @default(uuid())
  url                String?
  local_path         String
  size               String
  width              String
  height             String
  extension          String
  mime               String
  created_at         DateTime @default(now())
  updated_at         DateTime @updatedAt
  thumbnailSigns     signs[]  @relation("ThumbnailFile") // Inverse relation for thumbnail
  imageSigns         signs[]  @relation("ImageFile")     // Inverse relation for image
}

